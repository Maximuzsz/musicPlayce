services:
  api:
    build: . # Constrói a imagem a partir do Dockerfile na pasta atual
    container_name: musicplayce_api
    restart: unless-stopped
    env_file:
      - .env # Carrega as variáveis de ambiente do arquivo .env
    ports:
      - "${API_PORT}:${API_PORT}" # Mapeia a porta da API para a máquina host
    depends_on:
      - db # Garante que o serviço 'db' seja iniciado antes do 'api'
    command: /app/start.sh # Executa o script de inicialização

  go_api:
    build:
      context: ../go_api # Caminho para a pasta da API Go
      dockerfile: Dockerfile
    container_name: musicplayce_go_api
    restart: unless-stopped
    env_file: .env # Usa as mesmas variáveis de ambiente
    ports:
      - "8081:8081" # Mapeia a porta 8081
    depends_on:
      - db # Também depende do banco de dados

  # Serviço do Banco de Dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: musicplayce_db
    restart: unless-stopped
    env_file: .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: